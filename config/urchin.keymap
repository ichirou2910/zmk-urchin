/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define NAV 1
#define MEDIA 2
#define FUNC 3
#define NUM 4
#define CONFIG 5
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
		// Homerow Mod
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick-tap-ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		}
	};

	combos {
		compatible = "zmk,combos";
		// Q+W
		combo_escape {
			timeout-ms = <50>;
			key-positions = <20 21>;
			bindings = <&kp ESC>;
		};
		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo CONFIG>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp Q      &kp W      &kp E       &kp R        &kp T          &kp Y       &kp U        &kp I       &kp O      &kp P 
			&hm LGUI A &hm LALT S &hm LCTRL D &hm LSHIFT F &kp G          &kp H       &hm LSHIFT J &hm LCTRL K &hm LALT L &hm LGUI SEMI
			&kp Z      &kp X      &kp C       &kp V        &kp B          &kp N       &kp M        &kp COMMA   &kp DOT    &kp FSLH
							                  &lt 1 TAB    &lt 2 SPACE    &lt 3 ENTER &lt 4 BSPC
			>;
		};

		// Navigation
		nav_layer {
			label = "Nav";
			bindings = <
			&none     &none     &none     &none       &none			&none       &kp HOME  &kp UP    &kp END   &none
			&kp LGUI  &kp LALT  &kp LCTRL &kp LSHIFT  &none 		&none       &kp LEFT  &kp DOWN  &kp RIGHT &none
			&kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)   &none         &caps_word  &kp PG_DN &kp PG_UP &trans    &trans
										  &none       &none    		&kp ENTER   &kp DEL 
			>;
		};

		// Navigation
		media_layer {
			label = "Media";
			bindings = <
			&none     &none     &none     &none       &none			&none     &kp C_PP   &kp C_VOLUME_UP   &kp C_MUTE &none
			&kp LGUI  &kp LALT  &kp LCTRL &kp LSHIFT  &none 		&none     &kp C_PREV &kp C_VOLUME_DOWN &kp C_NEXT &none
			&none     &none     &none     &none       &none			&none     &none      &none             &none      &none
										  &none       &none    		&none     &none
			>;
		};

		// Function keys with modifiers
		func_layer {
			label = "Func";
			bindings = <
			&kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN         &none      &none     &none    &none     &none
			&kp F11 &kp F4 &kp F5 &kp F6 &none             &kp LSHIFT &kp LCTRL &kp LALT &kp LGUI  &none
			&kp F10 &kp F1 &kp F2 &kp F3 &none     		   &none      &none     &none    &none     &none
							      &none  &none             &none      &none  
			>;
		};

		// Numbers and symbols
		num_layer {
			label = "Num";
			bindings = <
			&kp LBRC  &kp N7 &kp N8 &kp N9 &kp PRINTSCREEN      &none 	   &none 	 &none    &none     &none
			&kp SQT   &kp N4 &kp N5 &kp N6 &none     			&kp LSHIFT &kp LCTRL &kp LALT &kp LGUI  &none
			&kp GRAVE &kp N1 &kp N2 &kp N3 &none     			&none 	   &none 	 &none    &none     &none
							        &kp N0 &kp MINUS            &none      &none  
			>;
		};

		// Used to change the keyboard's settings.
		config_layer {
			label = "Conf";
			bindings = <
			&bootloader &none &none &bt BT_CLR &bt BT_SEL 0         &bt BT_SEL 3 &none &unstick &none &bootloader 
			&none       &none &none &none      &bt BT_SEL 1   	    &bt BT_SEL 4 &none &none &none &none
			&none       &none &none &none      &bt BT_SEL 2         &bt BT_SEL 5 &none &none &none &none
									&none      &none                &none        &none 
			>;
		};
	};
};
